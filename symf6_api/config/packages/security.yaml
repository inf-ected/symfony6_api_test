security:
    password_hashers:
        # Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        Symfony\Component\Security\Core\User\InMemoryUser: plaintext
    providers:
        api_users:
            memory:
                users:
                    api_user: { password: '%env(HTTP_BASIC_AUTH_PASSWORD)%', roles: ['ROLE_API'] }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: api_users
            stateless: true
            # http_basic: ~
            http_basic:
                realm: Api Secured Area

    access_control:
        # - { path: ^/api/books, roles: ROLE_API }
        # - { path: ^/api/books, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
